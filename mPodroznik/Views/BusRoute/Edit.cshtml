@model mPodroznik.ViewModel.BusStopViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div>
    <h2>Edycja</h2>
    @using (Html.BeginForm("Edit", "BusRoute", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Przystanek Autobusowy</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <label class="control-label col-md-2">Linia nr</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BusID, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            data_bind = "value: busStop.busId"
                        }
                    })
                    @Html.ValidationMessageFor(model => model.BusID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Numer przystanku</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BusStopOrder, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control",
                            data_bind = "value: busStop.busStopOrder"
                        }
                    })
                    @Html.ValidationMessageFor(model => model.BusStopOrder, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Nazwa przystanku</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BusStopName, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       data_bind = "value: busStop.busStopName"
                   }
               })
                    @Html.ValidationMessageFor(model => model.BusStopName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Szerokosc geofraficzna</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GPSLat, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       data_bind = "value: busStop.gpsLat"
                   }
               })
                    @Html.ValidationMessageFor(model => model.GPSLat, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Dlugosc geograficzna</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GPSLong, new
               {
                   htmlAttributes = new
                   {
                       @class = "form-control",
                       data_bind = "value: busStop.gpsLng"
                   }
               })
                    @Html.ValidationMessageFor(model => model.GPSLong, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Edytuj" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>
<div>
    @Html.ActionLink("Powrot do Listy", "ShowRouteTable", Model)
</div>
@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval", "/Scripts/ViewModels/BusStopViewModel.js")*@
    <script src="~/scripts/jquery.validate.js"></script>
    <script src="~/scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/scripts/ViewModels/BusStopViewModel.js"></script>
    <script>
        var viewModel = new BusStopViewModel(@Html.HtmlConvertToJson(Model));
        ko.applyBindings(viewModel);
    </script>
}